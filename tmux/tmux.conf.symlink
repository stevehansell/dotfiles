# improve colors
set -g default-terminal 'screen-256color'

# act like vim
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+
bind-key b last-window

# Smart pane switching with awareness of vim splits
# # See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

set -g prefix2 C-s

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on


# remove administrative debris (session name, hostname, time) in status bar
set -g status-left ''
set -g status-right '#(spotify-current-track)  '
set -g status-right-length 150
set -g status-interval 5

set -g status-bg '#181818'
set -g status-fg '#aaaaaa'
set-window-option -g window-status-current-bg '#4c489f'
set-window-option -g window-status-current-fg '#ffffff'


# prefix -> back-one-character
bind-key C-b send-prefix
# prefix-2 -> forward-incremental-history-search
bind-key C-s send-prefix -2

# Local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'

# Mouseable window scrolling
set -g mouse on

# increase scrollback lines
set -g history-limit 10000

# Escape sequence time to zero
set -s escape-time 0

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf; display-message "Reloaded!"

# Clear scrollback buffer
bind-key C-l send-keys C-l \; clear-history

unbind p
bind p run-shell "spotify-playpause"

unbind n
bind n run-shell "spotify-next-track"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Reattach each new window to the user bootstrap namespace
# # https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
set -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL -l"

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Find occurences of "Error"
bind-key e copy-mode \; send-keys "?Error" C-m

#run-shell ~/.dotfiles/tmux/tmux-open/open.tmux
